steps:
  # Install dependencies
  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']

  # Run unit tests
  - name: 'gcr.io/cloud-builders/npm'
    args: ['test']
    secretEnv: ['NEXT_PUBLIC_BASE_URL']

  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '--platform=linux/amd64',
        '-t',
        'europe-west1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/mkrolik-next-todos-frontend:latest',
        '--build-arg',
        'NEXT_PUBLIC_BASE_URL',
        '.',
      ]
    env:
      - 'DOCKER_BUILDKIT=1'
    secretEnv: ['NEXT_PUBLIC_BASE_URL']

  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'europe-west1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/mkrolik-next-todos-frontend:latest',
      ]

  # Deploy to Cloud Run
  - name: google/cloud-sdk
    args:
      [
        'gcloud',
        'run',
        'deploy',
        'mkrolik-next-todos-frontend',
        '--image=europe-west1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/mkrolik-next-todos-frontend:latest',
        '--region',
        'europe-west1',
        '--platform',
        'managed',
        '--allow-unauthenticated',
        '--memory',
        '512Mi',
        '--cpu',
        '1',
        '--max-instances',
        '3',
        '--port',
        '3000',
        '--set-secrets',
        'NEXT_PUBLIC_BASE_URL=NEXT_PUBLIC_BASE_URL:latest',
      ]

  # Deploy to Firebase Hosting
  - name: 'node:22-alpine'
    entrypoint: 'sh'
    args:
      [
        '-c',
        'npm install -g firebase-tools && firebase deploy --project=${PROJECT_ID} --only hosting',
      ]

availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/NEXT_PUBLIC_BASE_URL/versions/latest
      env: 'NEXT_PUBLIC_BASE_URL'

# Store images in Google Artifact Registry
images:
  - europe-west1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/mkrolik-next-todos-frontend:latest

options:
  logging: CLOUD_LOGGING_ONLY
